/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author micheal chipiko
 */
public class UpdateLogInInfoUI extends javax.swing.JFrame {
static String Usertype;
static String UserID;
Statement stmt;
ResultSet rs;
Connection conn;
    /**
     * Creates new form UpdateLogInInfoUI
     */
    public UpdateLogInInfoUI() {
        initComponents();
        DoConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblUsertype = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        txfUsername = new javax.swing.JTextField();
        txfPassword = new javax.swing.JTextField();
        btnMainMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User Type:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        jLabel4.setText("User ID");

        btnUpdate.setText("Update Info");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblUsertype.setText("lblUsertype");

        lblUserID.setText("jLabel6");

        btnMainMenu.setText("Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txfUsername))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUserID)
                                    .addComponent(lblUsertype))
                                .addGap(0, 255, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txfPassword))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnMainMenu)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblUsertype))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblUserID))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnMainMenu))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    try {
        String newUsername = txfUsername.getText();
        String newPWord = txfPassword.getText(); //stores the new password of the user
        
        int confirm = JOptionPane.showConfirmDialog(this, "Are You sure you want to make these changes to your Login Account?" + "\n"
                + "Old Username: " + rs.getString("Username") + "\n"
                + "New Username: " + newUsername + "\n"
                +"Old Password: " + rs.getString("Password") + "\n" + 
                "New Password: " + newPWord);
        if(confirm == 0){
       if(rs.getString("Password").equals(newPWord)){
        //Checks if there were any changes made to the password to remove any unneccessary updating to save resources
        rs.updateString("Username", newUsername);
        rs.updateRow();
        rs.close();
        stmt.close();
        DoConnect();
        
        JOptionPane.showMessageDialog(this, "Updated Successfully");
       }
       else{ //Updates every field including the username whether any changes were made to it or not   
        String newPassword = JOptionPane.showInputDialog("Please enter your new password again");
        if(newPWord.equals(newPassword)){
        rs.updateString("Username", newUsername);
        rs.updateString("Password", newPWord);
        
        rs.updateRow();
        rs.close();
        stmt.close();
        DoConnect();
        
        JOptionPane.showMessageDialog(this, "Updated Successfully");
        }
       }
        }
    } catch (SQLException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
if(Usertype.equalsIgnoreCase("Student")){
    try {
        //Opens the Student Main Menu
        new StudentMainMenuUI(UserID).setVisible(true);
        conn.close();
        stmt.close();
        this.dispose();
    } catch (SQLException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    }
}
if(Usertype.equalsIgnoreCase("Teacher")){
    try {
        new TeacherMainMenuUI().setVisible(true);
        conn.close();
        stmt.close();
        this.dispose();
    } catch (SQLException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    }
}
if(Usertype.equalsIgnoreCase("Mark Admin")){
//Add the Mark Admin main Menu Here


}
    }//GEN-LAST:event_btnMainMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateLogInInfoUI().setVisible(true);
            }
        });
    }
private void DoConnect(){
    try {
        String driver = "net.ucanaccess.jdbc.UcanaccessDriver";
        Class.forName(driver);
        conn = DriverManager.getConnection("jdbc:ucanaccess://" + "SchoolDatabase.mdb");
        stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        //Add the display part of the method
        getUserID_UserType();
       if(Usertype.equalsIgnoreCase("Student")){
       String SQL = "SELECT Username, Password FROM tblSPasswords WHERE StudentID = " + UserID;
       rs = stmt.executeQuery(SQL);
       rs.next();
       
       display();
       } 
       
       if(Usertype.equalsIgnoreCase("Teacher")){
        String SQL = "SELECT Username, Password FROM tblTPasswords WHERE TeacherID = " + UserID;
       rs = stmt.executeQuery(SQL);
       rs.next();
       
       display();
       }
       
       if(Usertype.equalsIgnoreCase("Mark Admin")){
        String SQL = "SELECT Username, Password FROM tblTPasswords WHERE TeacherID = " + UserID;
       rs = stmt.executeQuery(SQL);
       rs.next();
       
       display();
       } 

    } catch (SQLException | ClassNotFoundException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    }
}
private void display(){
    try {
        txfPassword.setText(rs.getString("Password"));
        txfUsername.setText(rs.getString("Username"));
        lblUserID.setText(UserID);
        lblUsertype.setText(Usertype);
    } catch (SQLException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    }

}//Parameter issues with calling The GUIs, Fix It later

private void getUserID_UserType(){
    //Gets the user ID and Usertype from the bridge text file and assigns it to the GUI fields to be used in relevent SQL Statements.
    BufferedReader in = null;
    try {
        in = new BufferedReader(new FileReader("PassOverParameterFile.txt"));
        String line = in.readLine();
        String [] Columns = line.split("\t");
        String InputUserID = Columns[0];
        String UserType = Columns[1];
        //There in a bug that doesnt read the data
        Usertype = UserType;
        UpdateLogInInfoUI.UserID = InputUserID;
    } catch (FileNotFoundException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            in.close();
        } catch (IOException ex) {
            Logger.getLogger(UpdateLogInInfoUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUsertype;
    private javax.swing.JTextField txfPassword;
    private javax.swing.JTextField txfUsername;
    // End of variables declaration//GEN-END:variables
}
